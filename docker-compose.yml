version: "3.8"

services:
  # Auth
  triple-s:
    build: ./triple-s
    env_file:
      - ./triple-s/example.env
    networks:
      - backend

  # Gateway
  gateway-service:
    build: ./gateway-service
    ports:
      - "8080:8080"  # Открываем порт наружу
    env_file:
      - ./gateway-service/example.env
    depends_on:
      - auth-service
      - comment-service
      - post-service
      - like-service
      - wall-service
      - notification-service

  # Auth
  auth-service:
    build: ./auth-service
    env_file:
      - ./auth-service/example.env
    depends_on:
      - psql-users
    networks:
      - backend

  # Comment
  comment-service:
    build: ./comment-service
    env_file:
      - ./comment-service/example.env
    depends_on:
      - psql-posts
      - kafka
    networks:
      - backend

  # Post
  post-service:
    build: ./post-service
    env_file:
      - ./post-service/example.env
    depends_on:
      - psql-posts
      - triple-s
    networks:
      - backend

  # Like
  like-service:
    build: ./like-service
    env_file:
      - ./like-service/example.env
    depends_on:
      - psql-posts
    networks:
      - backend

  # Wall
  wall-service:
    build: ./wall-service
    env_file:
      - ./wall-service/example.env
    depends_on:
      - psql-posts
      - redis
    networks:
      - backend

  # Notification
  notification-service:
    build: ./notification-service
    env_file:
      - ./notification-service/example.env
    depends_on:
      - kafka
    networks:
      - backend

  # Redis
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  # PostgreSQL для постов
  psql-posts:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: sw_posts_db
      POSTGRES_USER: qwerty
      POSTGRES_PASSWORD: qwerty
    ports:
      - "5433:5432"  # Избегаем конфликта
    volumes:
      - ./init_sw_posts_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  # PostgreSQL для аутентификации
  psql-users:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: sw_users_auth
      POSTGRES_USER: qwerty
      POSTGRES_PASSWORD: qwerty
    ports:
      - "5434:5432"  # Избегаем конфликта
    volumes:
      - ./init_sw_users_auth.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

networks:
  backend:
    driver: bridge
